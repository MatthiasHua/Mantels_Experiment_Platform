#include "manu.h"

const unsigned char LOGO[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x38, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3C, 0x78, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x36, 0x58, 0x7C, 0xFE, 0x7C, 0xFE, 0x31, 0xF8, 0x00, 0xC0, 0x3F, 0x98, 0xC7, 0x87, 0xE1, 0xFC,
    0x36, 0xD8, 0x0C, 0xC6, 0x30, 0xC6, 0x31, 0x80, 0x00, 0xC0, 0x31, 0x98, 0xC6, 0x06, 0x01, 0x8C,
    0x33, 0x99, 0xFC, 0xC6, 0x30, 0xC6, 0x31, 0x80, 0x00, 0xC0, 0x31, 0x98, 0xC6, 0x06, 0x01, 0x8C,
    0x31, 0x99, 0x8C, 0xC6, 0x30, 0xFE, 0x31, 0xFC, 0x00, 0xC0, 0x31, 0x98, 0xC6, 0x07, 0xF1, 0xFC,
    0x31, 0x19, 0x8C, 0xC6, 0x30, 0xC0, 0x30, 0x0C, 0x00, 0xC0, 0x31, 0x98, 0xC6, 0x00, 0x31, 0x80,
    0x30, 0x19, 0x8C, 0xC6, 0x30, 0xC0, 0x30, 0x0C, 0x00, 0xC0, 0x31, 0x98, 0xC6, 0x00, 0x31, 0x80,
    0x30, 0x19, 0xFC, 0xC6, 0x3C, 0xFE, 0x31, 0xFC, 0x00, 0xFF, 0x3F, 0x9F, 0xC6, 0x07, 0xF1, 0xFC,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

Menu::Menu(Adafruit_ssd1306syp *dp) {
    display = dp;
    drawLOGO();
    num_options = 0;
    cursor = 0;
    cursor_seen = 0;
}

void Menu::update() {
    display -> update();
}

void Menu::drawLOGO() {
    display -> clear();
    display -> drawBitmap(0, 16, LOGO, 128, 16, 1);
    update();
}

void Menu::addOption(String text, PF pf) {
    text_options[num_options] = text;
    pf_options[num_options] = pf;
    num_options++;
}

void Menu::drawMenu() {
    display -> clear();
    display -> setTextSize(1);
    display -> setTextColor(WHITE);
    display -> setCursor(52,0);
    display -> println("Menu");
    for (int i = cursor_seen; i < num_options && i < cursor_seen + max_options_one_screen; i++) {
        if (i == cursor)
            display -> setTextColor(BLACK, WHITE);
        else 
            display -> setTextColor(WHITE, BLACK);
        display -> setCursor(0, (i - cursor_seen) * 8 + 8);
        display -> println(text_options[i]);
    }
    update();
}

void Menu::operate(int key[]) {
    if (key[KB_Down] == 1) {
        cursor ++;
    }
    else if (key[KB_Up] == 1) {
        cursor --;
    }
    else if (key[KB_Enter] == 1) {
        pf_options[cursor](this);
    }
    cursor = (cursor + num_options) % num_options;
    if (cursor_seen + max_options_one_screen <= cursor)
        cursor_seen = cursor - max_options_one_screen + 1;
    else if (cursor < cursor_seen)
        cursor_seen = cursor;
}

Adafruit_ssd1306syp* Menu::getDisplay() {
    return display;
}

